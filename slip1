1.	Use Apriori algorithm on groceries dataset to find which items are brought together. Use minimum support =0.25 

import pandas as pd
from mlxtend.preprocessing import TransactionEncoder
from mlxtend.frequent_patterns import apriori, association_rules
groceries = [
    ['milk', 'bread', 'eggs'],
    ['milk', 'bread'],
    ['milk', 'butter', 'bread'],
    ['bread', 'eggs'],
    ['butter', 'eggs']
]

te = TransactionEncoder()
te_ary = te.fit(groceries).transform(groceries)
df = pd.DataFrame(te_ary, columns=te.columns_)

print("Binary Matrix of Transactions:")
print(df)


frequent_itemsets = apriori(df, min_support=0.25, use_colnames=True)

print("\nFrequent Itemsets:")
print(frequent_itemsets)

rules = association_rules(frequent_itemsets, metric="confidence", min_threshold=0.5)

print("\nAssociation Rules:")
print(rules[['antecedents', 'consequents', 'support', 'confidence']])

2.	Write a Python program to prepare Scatter Plot for Iris Dataset. Convert Categorical values in numeric format for a dataset 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.preprocessing import LabelEncoder

data=pd.read_csv("iris.csv")
data=data.dropna(axis=0,how="any")
print(data)

x=data["SepalLengthCm"]
y=data["SepalWidthCm"]
z=data["Species"]
le=LabelEncoder()
z1=le.fit_transform(z)
print(z)
print(z1)



plt.scatter(x,y,c=z1)
plt.title("IRIS CSV")
plt.xlabel("SepalLengthCm")
plt.ylabel("SepalWidthCm")
plt.show()
